{"ast":null,"code":"var _jsxFileName = \"/Users/max/react-course/emall/src/components/collection-section/collection-section.component.tsx\";\n\n/** @format */\n// node_modules\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom'; // Components\n\nimport CollectionItem from '../collection-item/collection-item.component';\nimport LoadingSpinner from '../loading-spinner/loading-spinner.component'; // Redux dispatch + selector\n\nimport { selectShopCollection, selectIsCollectionFetching } from '../../redux/shop/shop.selectors'; // Styles + Types + Interfaces\n\nimport * as S from './collection-section.styles';\n\nconst CollectionSection = () => {\n  const {\n    collectionId\n  } = useParams();\n  const isFetching = useSelector(selectIsCollectionFetching);\n  const collection = useSelector(selectShopCollection(collectionId));\n\n  if (!collection || isFetching) {\n    return React.createElement(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n  const {\n    title,\n    items\n  } = collection;\n  return React.createElement(S.CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(S.CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, title), React.createElement(S.CollectionItems, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, Object.assign({\n    key: item.id\n  }, item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))));\n};\n\nexport default CollectionSection;","map":{"version":3,"sources":["/Users/max/react-course/emall/src/components/collection-section/collection-section.component.tsx"],"names":["React","useSelector","useParams","CollectionItem","LoadingSpinner","selectShopCollection","selectIsCollectionFetching","S","CollectionSection","collectionId","isFetching","collection","title","items","map","item","id"],"mappings":";;AAAA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,cAAP,MAA2B,8CAA3B,C,CAEA;;AACA,SACEC,oBADF,EAEEC,0BAFF,QAGO,iCAHP,C,CAKA;;AACA,OAAO,KAAKC,CAAZ,MAAmB,6BAAnB;;AAOA,MAAMC,iBAA2B,GAAG,MAAM;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAmBP,SAAS,EAAlC;AACA,QAAMQ,UAAU,GAAGT,WAAW,CAACK,0BAAD,CAA9B;AACA,QAAMK,UAAyC,GAAGV,WAAW,CAC3DI,oBAAoB,CAACI,YAAD,CADuC,CAA7D;;AAIA,MAAI,CAACE,UAAD,IAAeD,UAAnB,EAA+B;AAC7B,WAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,UAAzB;AAEA,SACE,oBAAC,CAAD,CAAG,uBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,CAAD,CAAG,eAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBC,KAApB,CADF,EAEE,oBAAC,CAAD,CAAG,eAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAWC,IAAD,IACT,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC;AAA1B,KAAkCD,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CAFF,CADF;AAUD,CAvBD;;AAyBA,eAAeP,iBAAf","sourcesContent":["/** @format */\n\n// node_modules\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\n// Components\nimport CollectionItem from '../collection-item/collection-item.component';\nimport LoadingSpinner from '../loading-spinner/loading-spinner.component';\n\n// Redux dispatch + selector\nimport {\n  selectShopCollection,\n  selectIsCollectionFetching,\n} from '../../redux/shop/shop.selectors';\n\n// Styles + Types + Interfaces\nimport * as S from './collection-section.styles';\nimport * as T from '../../Types';\n\ninterface RouteParams {\n  collectionId: string;\n}\n\nconst CollectionSection: React.FC = () => {\n  const { collectionId } = useParams<RouteParams>();\n  const isFetching = useSelector(selectIsCollectionFetching);\n  const collection: T.CollectionItemsProps | null = useSelector(\n    selectShopCollection(collectionId),\n  );\n\n  if (!collection || isFetching) {\n    return <LoadingSpinner />;\n  }\n\n  const { title, items } = collection;\n\n  return (\n    <S.CollectionPageContainer>\n      <S.CollectionTitle>{title}</S.CollectionTitle>\n      <S.CollectionItems>\n        {items.map((item: T.CollectionItemProps) => (\n          <CollectionItem key={item.id} {...item} />\n        ))}\n      </S.CollectionItems>\n    </S.CollectionPageContainer>\n  );\n};\n\nexport default CollectionSection;\n"]},"metadata":{},"sourceType":"module"}