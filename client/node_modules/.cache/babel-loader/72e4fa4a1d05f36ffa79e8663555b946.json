{"ast":null,"code":"/** @format */\nimport { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulator, cartItem) => accumulator + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulator, cartItem) => accumulator + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/max/react-course/emall/client/src/redux/cart/cart.selectors.ts"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulator","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA;AAEA,SAASA,cAAT,QAA+B,UAA/B;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAyBA,KAAK,CAACC,IAAlD;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE3CE,IAAD,IAAUA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CAACI,MAAV,CACE,CAACC,WAAD,EAAcC,QAAd,KAA2BD,WAAW,GAAGC,QAAQ,CAACC,QADpD,EAEE,CAFF,CAH8C,CAA3C;AASP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBC,SAAD,IAC/DA,SAAS,CAACI,MAAV,CACE,CAACC,WAAD,EAAcC,QAAd,KAA2BD,WAAW,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACG,KADxE,EAEE,CAFF,CAD2C,CAAtC","sourcesContent":["/** @format */\n\nimport { createSelector } from 'reselect';\n\nimport * as T from '../../Types';\n\nconst selectCart = (state: T.StateProps) => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems,\n);\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden,\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulator, cartItem) => accumulator + cartItem.quantity,\n      0,\n    ),\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce(\n    (accumulator, cartItem) => accumulator + cartItem.quantity * cartItem.price,\n    0,\n  ),\n);\n"]},"metadata":{},"sourceType":"module"}