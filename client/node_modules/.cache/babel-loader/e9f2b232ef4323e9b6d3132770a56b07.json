{"ast":null,"code":"var _jsxFileName = \"/Users/max/react-course/emall/client/src/components/register/register.component.tsx\";\n\n/** @format */\n// node_modules\nimport React, { useState, memo } from 'react';\nimport { useDispatch } from 'react-redux'; // Components\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // Redux dispatch + selector\n\nimport { registerStart } from '../../redux/user/user.actions'; // Styles + Types + Interfaces\n\nimport * as S from './register.styles';\n\nconst Register = () => {\n  const [values, setValues] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmedPassword: ''\n  });\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmedPassword\n    } = values;\n\n    if (password !== confirmedPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    dispatch(registerStart({\n      displayName,\n      email,\n      password\n    }));\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(S.RegisterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(S.TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"register-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: values.displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: values.email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: values.password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmedPassword\",\n    value: values.confirmedPassword,\n    handleChange: handleChange,\n    label: \"Confirmed Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nexport default memo(Register);","map":{"version":3,"sources":["/Users/max/react-course/emall/client/src/components/register/register.component.tsx"],"names":["React","useState","memo","useDispatch","FormInput","CustomButton","registerStart","S","Register","values","setValues","displayName","email","password","confirmedPassword","dispatch","handleSubmit","event","preventDefault","alert","handleChange","name","value","target"],"mappings":"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","sourcesContent":["/** @format */\n\n// node_modules\nimport React, { useState, memo } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// Components\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n// Redux dispatch + selector\nimport { registerStart } from '../../redux/user/user.actions';\n\n// Styles + Types + Interfaces\nimport * as S from './register.styles';\n\nconst Register: React.FC = () => {\n  const [values, setValues] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmedPassword: '',\n  });\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { displayName, email, password, confirmedPassword } = values;\n\n    if (password !== confirmedPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n    dispatch(registerStart({ displayName, email, password }));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setValues({ ...values, [name]: value });\n  };\n\n  return (\n    <S.RegisterContainer>\n      <S.TitleContainer>I do not have an account</S.TitleContainer>\n      <span>Sign up with your email and password</span>\n      <form className=\"register-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={values.displayName}\n          handleChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmedPassword\"\n          value={values.confirmedPassword}\n          handleChange={handleChange}\n          label=\"Confirmed Password\"\n          required\n        />\n        <CustomButton type=\"submit\">Register</CustomButton>\n      </form>\n    </S.RegisterContainer>\n  );\n};\n\nexport default memo(Register);\n"]},"metadata":{},"sourceType":"module"}