{"ast":null,"code":"var _jsxFileName = \"/Users/max/react-course/emall/src/components/collection-overview/collection-overview.component.tsx\";\n\n/** @format */\n// node_modules\nimport React from 'react';\nimport { useSelector } from 'react-redux'; // Components\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport LoadingSpinner from '../loading-spinner/loading-spinner.component'; // Redux dispatch + selector\n\nimport { selectShopCollectionsForPreview, selectIsCollectionFetching } from '../../redux/shop/shop.selectors'; // Styles + Types + Interfaces\n\nimport * as S from './collection-overview.styles';\n\nconst CollectionOverview = () => {\n  const isFetching = useSelector(selectIsCollectionFetching);\n  const collections = useSelector(selectShopCollectionsForPreview);\n  console.log(collections);\n\n  if (isFetching) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(S.CollectionsOverviewContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, collections.map(({\n    id,\n    ...otherCollectionProps\n  }) => /*#__PURE__*/React.createElement(CollectionPreview, Object.assign({\n    key: id\n  }, otherCollectionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default CollectionOverview;","map":{"version":3,"sources":["/Users/max/react-course/emall/src/components/collection-overview/collection-overview.component.tsx"],"names":["React","useSelector","CollectionPreview","LoadingSpinner","selectShopCollectionsForPreview","selectIsCollectionFetching","S","CollectionOverview","isFetching","collections","console","log","map","id","otherCollectionProps"],"mappings":";;AAAA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,oDAA9B;AACA,OAAOC,cAAP,MAA2B,8CAA3B,C,CAEA;;AACA,SACEC,+BADF,EAEEC,0BAFF,QAGO,iCAHP,C,CAKA;;AACA,OAAO,KAAKC,CAAZ,MAAmB,8BAAnB;;AAGA,MAAMC,kBAA4B,GAAG,MAAM;AACzC,QAAMC,UAAU,GAAGP,WAAW,CAACI,0BAAD,CAA9B;AACA,QAAMI,WAAqC,GAAGR,WAAW,CACvDG,+BADuD,CAAzD;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AAEA,MAAID,UAAJ,EAAgB;AACd,wBAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,oBAAC,CAAD,CAAG,4BAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,CAACG,GAAZ,CAAgB,CAAC;AAAEC,IAAAA,EAAF;AAAM,OAAGC;AAAT,GAAD,kBACf,oBAAC,iBAAD;AAAmB,IAAA,GAAG,EAAED;AAAxB,KAAgCC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADF;AAOD,CAnBD;;AAqBA,eAAeP,kBAAf","sourcesContent":["/** @format */\n\n// node_modules\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n// Components\nimport CollectionPreview from '../collection-preview/collection-preview.component';\nimport LoadingSpinner from '../loading-spinner/loading-spinner.component';\n\n// Redux dispatch + selector\nimport {\n  selectShopCollectionsForPreview,\n  selectIsCollectionFetching,\n} from '../../redux/shop/shop.selectors';\n\n// Styles + Types + Interfaces\nimport * as S from './collection-overview.styles';\nimport * as T from '../../Types';\n\nconst CollectionOverview: React.FC = () => {\n  const isFetching = useSelector(selectIsCollectionFetching);\n  const collections: T.CollectionItemsProps[] = useSelector(\n    selectShopCollectionsForPreview,\n  );\n\n  console.log(collections);\n\n  if (isFetching) {\n    return <LoadingSpinner />;\n  }\n\n  return (\n    <S.CollectionsOverviewContainer>\n      {collections.map(({ id, ...otherCollectionProps }) => (\n        <CollectionPreview key={id} {...otherCollectionProps} />\n      ))}\n    </S.CollectionsOverviewContainer>\n  );\n};\n\nexport default CollectionOverview;\n"]},"metadata":{},"sourceType":"module"}