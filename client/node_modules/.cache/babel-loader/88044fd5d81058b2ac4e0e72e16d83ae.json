{"ast":null,"code":"/** @format */\nimport { UserActionTypes } from './user.types';\n\n/**\n * Google / Email sign in actions:\n */\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  emailAndPasswordPayload: emailAndPassword\n});\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const signInFailure = errorMessage => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  errorMessagePayload: errorMessage\n});\n/**\n * User session persistent action:\n */\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});\n/**\n * Sign out actions:\n */\n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = errorMessage => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  errorMessagePayload: errorMessage\n});\n/**\n * Register actions:\n */\n\nexport const registerStart = registerInfos => ({\n  type: UserActionTypes.REGISTER_START,\n  registerPayload: registerInfos\n});\nexport const registerSuccess = () => ({\n  type: UserActionTypes.REGISTER_SUCCESS\n});\nexport const registerFailure = errorMessage => ({\n  type: UserActionTypes.REGISTER_FAILURE,\n  errorMessagePayload: errorMessage\n});","map":{"version":3,"sources":["/Users/max/react-course/emall/client/src/redux/user/user.actions.ts"],"names":["UserActionTypes","googleSignInStart","type","GOOGLE_SIGN_IN_START","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","emailAndPasswordPayload","signInSuccess","user","SIGN_IN_SUCCESS","payload","signInFailure","errorMessage","SIGN_IN_FAILURE","errorMessagePayload","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE","registerStart","registerInfos","REGISTER_START","registerPayload","registerSuccess","REGISTER_SUCCESS","registerFailure","REGISTER_FAILURE"],"mappings":"AAAA;AAEA,SAASA,eAAT,QAAgC,cAAhC;;AAIA;;;AAIA,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADgB,CAAP,CAA1B;AAIP,OAAO,MAAMC,gBAAgB,GAAIC,gBAAD,KAA2C;AACzEH,EAAAA,IAAI,EAAEF,eAAe,CAACM,mBADmD;AAEzEC,EAAAA,uBAAuB,EAAEF;AAFgD,CAA3C,CAAzB;AAKP,OAAO,MAAMG,aAAa,GACxBC,IAD2B,KAEvB;AACJP,EAAAA,IAAI,EAAEF,eAAe,CAACU,eADlB;AAEJC,EAAAA,OAAO,EAAEF;AAFL,CAFuB,CAAtB;AAOP,OAAO,MAAMG,aAAa,GAAIC,YAAD,KAA2B;AACtDX,EAAAA,IAAI,EAAEF,eAAe,CAACc,eADgC;AAEtDC,EAAAA,mBAAmB,EAAEF;AAFiC,CAA3B,CAAtB;AAKP;;;;AAIA,OAAO,MAAMG,gBAAgB,GAAG,OAAO;AACrCd,EAAAA,IAAI,EAAEF,eAAe,CAACiB;AADe,CAAP,CAAzB;AAIP;;;;AAIA,OAAO,MAAMC,YAAY,GAAG,OAAO;AACjChB,EAAAA,IAAI,EAAEF,eAAe,CAACmB;AADW,CAAP,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnClB,EAAAA,IAAI,EAAEF,eAAe,CAACqB;AADa,CAAP,CAAvB;AAIP,OAAO,MAAMC,cAAc,GAAIT,YAAD,KAA2B;AACvDX,EAAAA,IAAI,EAAEF,eAAe,CAACuB,gBADiC;AAEvDR,EAAAA,mBAAmB,EAAEF;AAFkC,CAA3B,CAAvB;AAKP;;;;AAIA,OAAO,MAAMW,aAAa,GAAIC,aAAD,KAAqC;AAChEvB,EAAAA,IAAI,EAAEF,eAAe,CAAC0B,cAD0C;AAEhEC,EAAAA,eAAe,EAAEF;AAF+C,CAArC,CAAtB;AAKP,OAAO,MAAMG,eAAe,GAAG,OAAO;AACpC1B,EAAAA,IAAI,EAAEF,eAAe,CAAC6B;AADc,CAAP,CAAxB;AAIP,OAAO,MAAMC,eAAe,GAAIjB,YAAD,KAA2B;AACxDX,EAAAA,IAAI,EAAEF,eAAe,CAAC+B,gBADkC;AAExDhB,EAAAA,mBAAmB,EAAEF;AAFmC,CAA3B,CAAxB","sourcesContent":["/** @format */\n\nimport { UserActionTypes } from './user.types';\n\nimport * as T from './user.types';\n\n/**\n * Google / Email sign in actions:\n */\n\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START,\n});\n\nexport const emailSignInStart = (emailAndPassword: T.EmailAndPassword) => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  emailAndPasswordPayload: emailAndPassword,\n});\n\nexport const signInSuccess = (\n  user: firebase.firestore.DocumentData | undefined,\n) => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user,\n});\n\nexport const signInFailure = (errorMessage: string) => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  errorMessagePayload: errorMessage,\n});\n\n/**\n * User session persistent action:\n */\n\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION,\n});\n\n/**\n * Sign out actions:\n */\n\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START,\n});\n\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS,\n});\n\nexport const signOutFailure = (errorMessage: string) => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  errorMessagePayload: errorMessage,\n});\n\n/**\n * Register actions:\n */\n\nexport const registerStart = (registerInfos: T.RegisterInfos) => ({\n  type: UserActionTypes.REGISTER_START,\n  registerPayload: registerInfos,\n});\n\nexport const registerSuccess = () => ({\n  type: UserActionTypes.REGISTER_SUCCESS,\n});\n\nexport const registerFailure = (errorMessage: string) => ({\n  type: UserActionTypes.REGISTER_FAILURE,\n  errorMessagePayload: errorMessage,\n});\n"]},"metadata":{},"sourceType":"module"}