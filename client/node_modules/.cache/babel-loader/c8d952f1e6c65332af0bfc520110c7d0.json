{"ast":null,"code":"/** @format */\nexport const addItemToCart = (cartItems, ItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === ItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === ItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...ItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemToCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem) {\n    if (existingCartItem.quantity === 1) {\n      return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n    }\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["/Users/max/react-course/emall/client/src/redux/cart/cart.utils.ts"],"names":["addItemToCart","cartItems","ItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemToCart","cartItemToRemove","filter"],"mappings":"AAAA;AAKA,OAAO,MAAMA,aAAa,GAAG,CAC3BC,SAD2B,EAE3BC,SAF2B,KAGxB;AACH,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EADjB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,SAAL;AAAgBM,IAAAA,QAAQ,EAAE;AAA1B,GAAf,CAAP;AACD,CAjBM;AAmBP,OAAO,MAAMC,gBAAgB,GAAG,CAC9BR,SAD8B,EAE9BS,gBAF8B,KAG3B;AACH,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,QAAIA,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACnC,aAAOP,SAAS,CAACU,MAAV,CACJN,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAD1C,CAAP;AAGD;AACF;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACI,EAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADJ,GAEIH,QAHC,CAAP;AAKD,CArBM","sourcesContent":["/** @format */\n\nimport * as T from '../../Types';\nimport { ItemToAddProps } from './cart.types';\n\nexport const addItemToCart = (\n  cartItems: T.CartItemProps[],\n  ItemToAdd: ItemToAddProps,\n) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === ItemToAdd.id,\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === ItemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem,\n    );\n  }\n\n  return [...cartItems, { ...ItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemToCart = (\n  cartItems: T.CartItemProps[],\n  cartItemToRemove: T.CartItemProps,\n) => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id,\n  );\n\n  if (existingCartItem) {\n    if (existingCartItem.quantity === 1) {\n      return cartItems.filter(\n        (cartItem) => cartItem.id !== cartItemToRemove.id,\n      );\n    }\n  }\n\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem,\n  );\n};\n"]},"metadata":{},"sourceType":"module"}