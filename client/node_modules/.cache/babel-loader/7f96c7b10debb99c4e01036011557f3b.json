{"ast":null,"code":"var _jsxFileName = \"/Users/max/react-course/emall/src/components/sign-in/sign-in.component.tsx\";\n\n/** @format */\n// node_modules\nimport React, { useState, memo } from 'react';\nimport { useDispatch } from 'react-redux'; // Components\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // Redux dispatch + selector\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; // Styles + Types + Interfaces\n\nimport * as S from './sign-in.styles';\n\nconst SignIn = () => {\n  const [values, setValues] = useState({\n    email: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n\n  const signInWithGoogle = () => {\n    dispatch(googleSignInStart());\n  };\n\n  const signInWithEmail = async event => {\n    event.preventDefault();\n    dispatch(emailSignInStart(values));\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(S.SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(S.TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: signInWithEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: values.email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: values.password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(S.SignInButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Sign in with Google\"))));\n};\n\nexport default memo(SignIn);","map":{"version":3,"sources":["/Users/max/react-course/emall/src/components/sign-in/sign-in.component.tsx"],"names":["React","useState","memo","useDispatch","FormInput","CustomButton","googleSignInStart","emailSignInStart","S","SignIn","values","setValues","email","password","dispatch","signInWithGoogle","signInWithEmail","event","preventDefault","handleChange","name","value","target"],"mappings":";;AAAA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB,C,CAEA;;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP,C,CAKA;;AACA,OAAO,KAAKC,CAAZ,MAAmB,kBAAnB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC;AACnCW,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAD,CAApC;AAIA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACD,GAFD;;AAIA,QAAMU,eAAe,GAAG,MAAOC,KAAP,IAAmD;AACzEA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,QAAQ,CAACP,gBAAgB,CAACG,MAAD,CAAjB,CAAR;AACD,GAHD;;AAKA,QAAMS,YAAY,GAAIF,KAAD,IAAsD;AACzE,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBJ,KAAK,CAACK,MAA9B;AAEAX,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACU,IAAD,GAAQC;AAArB,KAAD,CAAT;AACD,GAJD;;AAMA,sBACE,oBAAC,CAAD,CAAG,eAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,CAAD,CAAG,cAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,eAGE;AAAM,IAAA,QAAQ,EAAEL,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEN,MAAM,CAACE,KAHhB;AAIE,IAAA,YAAY,EAAEO,YAJhB;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAET,MAAM,CAACG,QAHhB;AAIE,IAAA,YAAY,EAAEM,YAJhB;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE,oBAAC,CAAD,CAAG,qBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEJ,gBAArC;AAAuD,IAAA,cAAc,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAjBF,CAHF,CADF;AA8BD,CApDD;;AAsDA,eAAeb,IAAI,CAACO,MAAD,CAAnB","sourcesContent":["/** @format */\n\n// node_modules\nimport React, { useState, memo } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// Components\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n// Redux dispatch + selector\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from '../../redux/user/user.actions';\n\n// Styles + Types + Interfaces\nimport * as S from './sign-in.styles';\n\nconst SignIn: React.FC = () => {\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n  });\n  const dispatch = useDispatch();\n\n  const signInWithGoogle = () => {\n    dispatch(googleSignInStart());\n  };\n\n  const signInWithEmail = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    dispatch(emailSignInStart(values));\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = event.target;\n\n    setValues({ ...values, [name]: value });\n  };\n\n  return (\n    <S.SignInContainer>\n      <S.TitleContainer>I already have an account</S.TitleContainer>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={signInWithEmail}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          handleChange={handleChange}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={values.password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <S.SignInButtonContainer>\n          <CustomButton type=\"submit\">Sign in</CustomButton>\n          <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </S.SignInButtonContainer>\n      </form>\n    </S.SignInContainer>\n  );\n};\n\nexport default memo(SignIn);\n"]},"metadata":{},"sourceType":"module"}