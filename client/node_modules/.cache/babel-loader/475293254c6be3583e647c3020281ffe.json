{"ast":null,"code":"/** @format */\nimport { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], state => state.collections);\nexport const selectShopCollectionsForPreview = createSelector([selectShopCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectShopCollection = collectionUrlParam => createSelector([selectShopCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], state => state.isFetching);","map":{"version":3,"sources":["/Users/max/react-course/emall/client/src/redux/shop/shop.selectors.ts"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectShopCollectionsForPreview","Object","keys","map","key","selectShopCollection","collectionUrlParam","selectIsCollectionFetching","isFetching"],"mappings":"AAAA;AAEA,SAASA,cAAT,QAA+B,UAA/B;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAyBA,KAAK,CAACC,IAAlD;;AAEA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CACjD,CAACC,UAAD,CADiD,EAEhDC,KAAD,IAAWA,KAAK,CAACG,WAFgC,CAA5C;AAKP,OAAO,MAAMC,+BAA+B,GAAGN,cAAc,CAC3D,CAACI,qBAAD,CAD2D,EAE1DC,WAAD,IACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHf,CAAtD;AAMP,OAAO,MAAMC,oBAAoB,GAAIC,kBAAD,IAClCZ,cAAc,CAAC,CAACI,qBAAD,CAAD,EAA2BC,WAAD,IACtCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtD,CAACC,UAAD,CADsD,EAErDC,KAAD,IAAWA,KAAK,CAACY,UAFqC,CAAjD","sourcesContent":["/** @format */\n\nimport { createSelector } from 'reselect';\nimport * as T from '../../Types';\n\nconst selectShop = (state: T.StateProps) => state.shop;\n\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  (state) => state.collections,\n);\n\nexport const selectShopCollectionsForPreview = createSelector(\n  [selectShopCollections],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : [],\n);\n\nexport const selectShopCollection = (collectionUrlParam: string) =>\n  createSelector([selectShopCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null,\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (state) => state.isFetching,\n);\n"]},"metadata":{},"sourceType":"module"}